class Solution {
public:
    bool ispermu(vector<int>s1cnt,vector<int>permucnt){
        for(int i=0;i<26;i++){
            if(s1cnt[i]!=permucnt[i])return false;
        }
        return true;
    }
    bool checkInclusion(string s1, string s2) {
        if(s1.size()>s2.size())return false;
        vector<int>s1cnt(26,0);
        vector<int>permucnt(26,0);
        for(int i=0;i<s1.size();i++){
            s1cnt[s1[i]-'a']++;
            permucnt[s2[i]-'a']++;
        }
        if(ispermu(s1cnt,permucnt))return true;
        int first=0;
        int second=s1.size();
        while(second<s2.size()){
            permucnt[s2[second]-'a']++;
            permucnt[s2[first]-'a']--;
            if(ispermu(s1cnt,permucnt))return true;
            first++;
            second++;
        }
        return false;

        
    }
};
